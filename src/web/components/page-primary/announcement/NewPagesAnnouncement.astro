---
import { getLangFromUrl } from "@server/i18n/utils"
import { useTranslations } from "@server/i18n/utils"
import { COOKIES } from "@server/cookies/COOKIES"
import type { PageInfo } from "@transport/PageInfo"

const { info } = Astro.props as { info: PageInfo }
const language = getLangFromUrl(Astro.url)
const t = useTranslations(language)

const is_current_last_page = info.remaining_pages_amount === 0
const cookie_was_last_page = COOKIES.WAS_FIRST_PAGE
---
<article>
	<script define:vars={{ is_current_last_page, cookie_was_last_page }}>
		(async () => {
			const was_last_page = (await cookieStore.get(cookie_was_last_page)).value === "true"
			if (was_last_page) {
				if (!is_current_last_page) {
					const body = document.querySelector("body")
					body.setAttribute("data-show-new-pages-announcement", "true")
				}
				cookieStore.delete(cookie_was_last_page)
			}
		})()
	</script>
	{t("announcement.new-pages.text").replace("{number}", `${info.remaining_pages_amount}`)}
</article>

<style>
    article {
        grid-column: full-width;
        grid-row: announcement;

        display: flex;
        justify-content: center;
        align-items: center;

        background-color: var(--color--white);
        border-radius: 30px;
        border: var(--section_border-width) solid var(--announcement_border-color);
        outline: var(--section_border-width) solid var(--announcement_outline-color);
        outline-offset: calc(var(--section_border-width) * -2);

        font-family: var(--heading_font-family);
        font-size: 1.5rem;
        color: var(--text_color);

        padding: 0.5rem 1rem;
    }

    :global(body:not([data-show-new-pages-announcement])) article {
        display: none;
    }

    @media (72em < width) {
        article {
            margin-inline: var(--sticky-navbar--desktop_margin-inline);
            font-size: 1.75rem;
        }
    }
</style>