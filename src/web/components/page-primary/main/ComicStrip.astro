---
import { getLangFromUrl, useTranslations } from "@server/i18n/utils"
import type { PageInfo } from "@transport/PageInfo"

const language = getLangFromUrl(Astro.url)
const t = useTranslations(language)

export interface Props {
	info: PageInfo
	title: string
}

const { info, title } = Astro.props as PageInfo
const { image, description } = info

const heading = [t("strip.heading-main"), title].join(" | ")
---
<div>
	<h1 class="semantic-only">{heading}</h1>
	<img
		src={image.optimized}
		alt={t("transcript.image.alt-text")}
		loading="eager"
		decoding="sync"
	/>
	<dialog id="zoomed-comic-strip">
		<div>
			<img src={image.raw} alt={t("transcript.image.alt-text")} loading="lazy" decoding="async" />
		</div>
		<button
			aria-expanded="true"
			aria-controls="zoomed-comic-strip"
			aria-label={t("interaction.close")}
			title={t("interaction.close")}
		>
			<img src="/icons/close.svg" alt="" />
		</button>
	</dialog>
</div>
<script>
	const image = document.querySelector("img:has(+ #zoomed-comic-strip)")
	const dialog = document.getElementById("zoomed-comic-strip")
	const close = dialog.querySelector("button")

	image.addEventListener("click", () => {
		dialog.showModal()
	})

	dialog.addEventListener("click", () => {
		dialog.close()
	})

	close.addEventListener("click", () => {
		dialog.close()
	})

	document.addEventListener("keydown", e => {
		if (e.key === "Escape" && dialog.getAttribute("open") === "") {
			e.preventDefault()
			dialog.close()
		}
	})
</script>
<style>
    div {
        grid-column: left;
        grid-row: strip;
        position: relative;
        width: 100%;
        aspect-ratio: var(--strip_aspect-ratio);
    }

    img[loading=eager] {
        display: block;
        width: 100%;
        height: 100%;
        background-color: white;
        border-radius: var(--component_border-radius);
        border: var(--section_border);
    }

    a {
        position: absolute;
        top: 0;
        width: 100%;
        height: 100%;
    }

    dialog {
        width: 100vw;
        height: 100vh;
        padding: 3rem;
        background-color: transparent;
    }

    /* For some reason padding bottom is ignored in the dialog, so we add it manually */
    dialog > div::after {
    		content: "";
    		display: block;
        height: 3rem;
        position: relative;
    }

    dialog::backdrop {
        background-color: #00000080;
    }

    dialog:not([open]) {
        display: none;
    }

    img[loading=lazy] {
        width: 100%;
        display: flex;
    }

    button {
        position: absolute;
        top: 6rem;
        right: 6rem;

        transform: scale(2);
    }

    button:hover {
        filter: var(--filter-image-hover);
    }
</style>