---
import { getLangFromUrl, useTranslations } from "@server/i18n/utils"
import type { PageInfo } from "@server/GetPageInfo"

const language = getLangFromUrl(Astro.url)
const t = useTranslations(language)

const { info } = Astro.props as { info: PageInfo }
const { description } = info

const paragraphs = description.trim().split("\n").map(p => {
	const parts = p.split(":")
	if (parts.length === 1) return { panel: null, description: parts[0] }
	return { panel: parts[0], description: parts.splice(1).join(":") }
})
---
<div id="transcript" class="transcript">
	<div class="header-container">
		<h3>{t("page-primary.transcript.title")}</h3>
	</div>
	{paragraphs.map(({ panel, description }) =>
		<p>
			{panel && <strong>{panel}:</strong>}
			{description || t("page-primary.transcript.no-description")}
		</p>
	)}
</div>
<style>
    .transcript {
        grid-column: full-width;
        grid-row: transcript;

        background-color: white;
        border-radius: var(--component_border-radius);
        border: var(--border-wide);

        padding: 2.5rem 5.5rem;
    }

    h3 {
        font-family: var(--heading_font-family);
        font-style: normal;
        font-weight: 400;
        font-size: 2rem;
        color: var(--heading_color);
        margin-bottom: 1rem;
    }

    strong {
        font-weight: 600;
    }

    .header-container {
        display: flex;
        justify-content: space-between;
    }

    @media (max-width: 72em) {
        h3 {
            font-size: 1.5rem;
            margin-bottom: 0.5rem;
        }

        .transcript {
            padding: var(--section--mobile_padding);
        }
    }
</style>
