---
import i18next, { t } from "i18next"
import { PageInfo } from "@server/GetPageInfo"
const language = i18next.language

export interface Props {
	info: PageInfo
}

const { info } = Astro.props
const { description } = info

const paragraphs = description.trim().split("\n").map(p => {
	const parts = p.split(":")
	if (parts.length === 1) return { panel: null, description: parts[0] }
	return { panel: parts[0], description: parts.splice(1).join(":") }
})
---
<aside aria-label={t("landmarks.transcript")}>
	<div class="header-container">
		<h2>{t("landmarks.transcript")}</h2>
		<button class="button-expand" aria-expanded="false" />
	</div>
	<div class="content">
		{paragraphs.map(({ panel, description }) =>
			<p>
				{panel && <span class="strong">{panel}:</span>}
				{description}
			</p>
		)}
	</div>
</aside>
<script define:vars={{ label: t("landmarks.transcript") }}>
	const button = document.querySelector(`aside[aria-label="${label}"] button[aria-expanded]`)
	button.addEventListener("click", () => {
		const isExpanded = button.getAttribute("aria-expanded") === "true"
		//TODO make this accessible
		button.setAttribute("aria-expanded", isExpanded ? "false" : "true")
	})
</script>
<style>
    aside {
        grid-area: transcript;

        background-color: white;
        border-radius: var(--border-radius);
        border: var(--border-wide);

        display: flex;
        flex-direction: column;
        gap: 1rem;

        overflow-y: hidden;

        height: 64px;
        transition: padding 300ms linear, height 300ms linear;

        padding: 10px 5.5rem;
    }

    aside:has(.button-expand[aria-expanded=true]) {
        padding-block: 2.5rem;
        height: 100%;
    }

    h2 {
        font-family: var(--font-family-title);
        font-style: normal;
        font-weight: 400;
        font-size: 2rem;
        line-height: 1.25em;
        color: var(--heading_color);
    }

    p {
        font-weight: 400;
        font-size: 16px;
        line-height: 19px;
    }

    .strong {
        font-weight: 600;
    }

    .header-container {
        display: flex;
        justify-content: space-between;
    }

    .button-expand {
        position: relative;
        height: 100%;
        aspect-ratio: 1;
        transition: transform 500ms ease-out;
    }

    .button-expand[aria-expanded=true] {
        transform: rotate(225deg);
    }

    .button-expand::before {
        transform: translateY(-50%);
    }

    .button-expand::after {
        transform: translateY(-50%) rotate(90deg);
    }

    .button-expand::before, .button-expand::after {
        content: "";
        position: absolute;
        height: calc(100% - 16px);
        width: 3px;
        background-color: black;
    }

    @media (max-width: 72em) {
        aside {
            padding: var(--section--mobile_padding);
        }

        h2 {
            font-size: 1.5rem;
        }

        aside:has(.button-expand[aria-expanded=true]) {
            padding: var(--section--mobile_padding);
        }
    }
</style>
