---
import MainLayout from "@web/layouts/MainLayout.astro"
import StripAside from "@web/components/aside/StripAside.astro"
import StickyNavBar from "@web/components/StickyNavBar.astro"
import ComicStrip from "@web/components/ComicStrip.astro"
import Transcript from "@web/components/Transcript.astro"
import Comments from "@web/components/Comments.astro"
import getLocalizedLinkToComicStrip from "@server/actions/GetLocalizedLinkToComicStrip"
import type {RelatedPages} from "@server/Utils"

export interface Props {
	info: RelatedPages
}

const {info} = Astro.props
const {backward, forward} = info
const previous = backward ? getLocalizedLinkToComicStrip(backward.one) : null
const next = forward ? getLocalizedLinkToComicStrip(forward.one) : null
---
<MainLayout info={info}>
    <div class="grid">
        <ComicStrip info={info}/>
        <StickyNavBar info={info}/>
        <StripAside info={info}/>
        <Transcript info={info}/>
        <Comments/>
    </div>
</MainLayout>
<script define:vars={{previous, next}}>
	//const handleOnKeyDown = (e) => {
	//    switch (e.key) {
	//        case "ArrowLeft":
	//            if (previous) {
	//                window.location.href = previous
	//                e.preventDefault()
	//            }
	//            break
	//        case "ArrowRight":
	//            if (next) {
	//                window.location.href = next
	//                e.preventDefault()
	//            }
	//            break
	//    }
	//}

	//document.body.addEventListener("keydown", handleOnKeyDown)
	//TODO check if we can keep this while screen readers are in order too

	const main = document.querySelector("main")
	const MOVE_THRESHOLD = 100

	let initialX = 0
	let initialY = 0
	let initialScrollPosition = 0

	main.addEventListener("touchstart", e => {
		const touch = e.touches[0]
		initialX = touch.pageX
		initialY = touch.pageY
		initialScrollPosition = document.documentElement.scrollTop
	})

	main.addEventListener("touchend", e => {
		const touch = e.changedTouches[0]
		const xDisplacement = touch.pageX - initialX
		const scrollDisplacement = document.documentElement.scrollTop - initialScrollPosition
		const yDisplacement = touch.pageY - initialY + scrollDisplacement

		//Non horizontal swipes are ignored
		if (Math.abs(yDisplacement) > MOVE_THRESHOLD) return

		if (xDisplacement < -MOVE_THRESHOLD && next) {
			window.location.href = next
		} else if (xDisplacement > MOVE_THRESHOLD && previous) {
			window.location.href = previous
		}
	})
</script>
<style>
    .grid {
        display: grid;
        grid-template-columns: var(--strip-width) 13rem;
        grid-template-rows: auto 1fr auto;
        grid-template-areas:
            "main strip-aside"
            "sticky-bar ."
            "transcript transcript"
            "comments comments";
        gap: 1.25rem;
    }

    @media (max-width: 60em) {
        .grid {
            grid-template-columns: 1fr;
            grid-template-areas:
                "main"
                "sticky-bar"
                "strip-aside"
                "comments";
        }
    }
</style>
