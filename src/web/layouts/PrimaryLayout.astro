---
import MainLayout from "@web/layouts/MainLayout.astro"
import StripAside from "@web/components/page-primary/aside/StripAside.astro"
import StickyNavBar from "@web/components/StickyNavBar.astro"
import Comments from "@web/components/page-primary/comments/Comments.astro"
import Newsletter from "@web/components/page-primary/newsletter/Newsletter.astro"
import PagePrimaryMain from "@web/components/page-primary/main/PagePrimaryMain.astro"
import StickyDockingAnimationScript from "@web/components/page-primary/scripts/StickyDockingAnimationScript.astro"
import SwipeNavigationScript from "@web/components/page-primary/scripts/SwipeNavigationScript.astro"
import ArrowNavigationScript from "@web/components/page-primary/scripts/ArrowNavigationScript.astro"
import CommentsScript from "@web/components/page-primary/scripts/CommentsScript.astro"
import NewsletterSubscriptionScript from "@web/components/page-primary/scripts/NewsletterSubscriptionScript.astro"
import SaveBookmarkScript from "@web/components/page-primary/scripts/SaveBookmarkScript.astro"
import NewPagesAnnouncement from "@web/components/page-primary/announcement/NewPagesAnnouncement.astro"
import getLocalizedLinkToComicStrip from "@server/actions/GetLocalizedLinkToComicStrip"
import { getLangFromUrl } from "@server/i18n/utils"
import type { PageInfo } from "@transport/PageInfo"

export interface Props {
	info: PageInfo;
	title: string
}

const { info, title } = Astro.props
const language = getLangFromUrl(Astro.url)

const { backward, forward } = info
const previous = backward ? getLocalizedLinkToComicStrip({ ...backward.one, language }) : null
const next = forward ? getLocalizedLinkToComicStrip({ ...forward.one, language }) : null
---
<MainLayout info={info} title={title}>
	<div class="grid">
		<NewPagesAnnouncement info={info} />
		<PagePrimaryMain info={info} title={title} />
		<StickyNavBar info={info} title={title} />
		<StripAside info={info} />
		<Comments info={info} />
		<Newsletter />
	</div>
</MainLayout>
<StickyDockingAnimationScript />
<SwipeNavigationScript previous={previous} next={next} />
<ArrowNavigationScript previous={previous} next={next} />
<CommentsScript info={info} />
<NewsletterSubscriptionScript />
<SaveBookmarkScript info={info} />
<style>
    /* Adding these on ":root" instead of ".grid" so it is easier to query the variables from js. */
    :root {
        --strip_width: calc(var(--content--desktop_width) + var(--section_border-width) * 2);

        --donations__button_size: 4.5rem;

        --section_padding: 2.5rem 5.5rem;
        --section_border-width: 3px;
        --section_border: var(--section_border-width) solid var(--component_border-color);

        --aside__section_padding: 1.5rem;
        /* using donations section as a proxy to calculate aside width */
        --aside--desktop_width: calc(
                var(--section_border-width) * 2 +
                var(--aside__section_padding) * 2 +
                var(--donations__button_size) * 2 +
                var(--buttons_gap)
        );

        --primary-layout_gap: 1.25rem;
        --primary-layout--desktop_width: calc(var(--strip_width) + var(--primary-layout_gap) + var(--aside--desktop_width));

        --sticky-navbar__link--disabled_color: var(--color--desaturated-yellow);
        --sticky-navbar__text_color: var(--color--white);
        --sticky-navbar--desktop_margin-inline: calc(5.5rem + var(--section_border-width));
        --sticky-navbar--desktop_width: calc(var(--primary-layout--desktop_width) - var(--sticky-navbar--desktop_margin-inline) * 2);
        --sticky-navbar_height: 3.75rem;
    }

    @media (width <= 72em) {
        :root {
            --section_padding: 1.5rem;
        }
    }

    .grid {
        display: grid;

        grid-template-columns:
        	[full-width-start left-start] var(--strip_width)
        	[left-end right-start] var(--aside--desktop_width)
        	[right-end full-width-end];

        grid-template-rows:
        	[announcement-start] auto
        	[announcement-end main-start strip-start aside-start] auto
        	[strip-end aside-end transcript-start] auto
        	[transcript-end main-end sticky-nav-bar-start] auto
        	[sticky-nav-bar-end comments-start] auto
        	[comments-end newsletter-start] auto
    			[newsletter-end];

        gap: var(--primary-layout_gap);
    }

    /* this is to remove the gap when there is no new pages announcement */
    :global(body:not([data-show-new-pages-announcement])) .grid {
        margin-top: calc(var(--primary-layout_gap) * -1);
    }

    @media (width <= 72em) {
        .grid {
            grid-template-columns:
							[full-width-start left-start right-start]
							minmax(0, var(--strip_width))
							[full-width-end left-end right-end];
            grid-template-rows:
            	[announcement-start] auto
							[announcement-end main-start strip-start] auto
							[strip-end transcript-start] auto
							[transcript-end main-end sticky-nav-bar-start] auto
							[sticky-nav-bar-end aside-start] auto
							[aside-end comments-start] auto
							[comments-end newsletter-start] auto
							[newsletter-end];
        }
    }
</style>
